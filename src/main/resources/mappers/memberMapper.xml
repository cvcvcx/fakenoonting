<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fakenoonting.www.member">

	<!-- 로그인정보 가져오기 -->
	<resultMap id="memberResult"
		type="com.fakenoonting.www.member.vo.MemberVO">
		<result property="id" column="id" />
		<result property="email" column="email" />
		<result property="pwd" column="pwd" />
		<result property="nick" column="nick" />
		<result property="name" column="name" />
		<result property="gender" column="gender" />
		<result property="phone" column="phone" />
		<result property="birth" column="birth" />
		<result property="address1" column="address1" />
		<result property="address2" column="address2" />
		<result property="zipcode" column="zipcode" />
		<result property="create_date" column="create_date" />
		<result property="delete_date" column="delete_date" />
		<result property="money_point" column="money_point" />
		<result property="isAdmin" column="is_admin" />
	</resultMap>

	<!-- 로그인 처리 -->
	<select id="loginByEmail"
		parameterType="com.fakenoonting.www.member.vo.MemberVO"
		resultType="com.fakenoonting.www.member.vo.MemberVO">
		<![CDATA[
			SELECT * FROM MEMBER WHERE email = #{email}
		]]>
	</select>

	<!-- 회원가입 처리 -->
	<insert id="registerMember"
		parameterType="com.fakenoonting.www.member.vo.MemberVO">
		<![CDATA[
			INSERT INTO MEMBER (email, pwd, nick, name, gender, phone, birth, address1, address2, zipcode ) 
			VALUES (#{email}, #{pwd}, #{nick}, #{name}, #{gender}, #{phone}, #{birth}, #{address1}, #{address2}, #{zipcode} )
		]]>
	</insert>

	<!-- 아이디 존재 여부 체크 -->
	<select id="emailCheck"
		parameterType="com.fakenoonting.www.member.vo.MemberVO"
		resultType="int">
		<![CDATA[
		SELECT	COUNT(*)
		FROM	MEMBER
		WHERE	email = #{email}
		]]>
	</select>

	<!-- 아이디에 해당하는 회원 정보 가져오기 -->
	<select id="selectMemberById" parameterType="long" resultType="com.fakenoonting.www.member.vo.MemberVO">
		<![CDATA[
		SELECT * FROM member WHERE id = #{id}
		]]>
	</select>

	<!-- 이메일에 해당하는 회원 정보 가져오기 -->
	<select id="selectMember" parameterType="String" resultType="com.fakenoonting.www.member.vo.MemberVO">
		<![CDATA[
		SELECT * FROM member WHERE email = #{email}
		]]>
	</select>



	<!-- 아이디에 해당하는 회원 정보 수정하기 -->
	<update id="updateMember"
		parameterType="com.fakenoonting.www.member.vo.MemberVO">
		<![CDATA[
		UPDATE 	member
		SET		pwd = #{pwd}, nick = #{nick}, name = #{name}, gender = #{gender}, phone = #{phone}, birth = #{birth}, address1 = #{address1}, address2 = #{address2}, zipcode = #{zipcode}
		WHERE	email = #{email}
		]]>
	</update>

	<update id="updateMemberMoneyPoint" parameterType="com.fakenoonting.www.member.vo.MemberVO">
		<![CDATA[
		UPDATE 	member
		SET		money_point = #{money_point}
		WHERE	id = #{id}
		]]>
	</update>

	<!-- 아이디에 해당하는 회원 정보 삭제하기 -->
	<delete id="deleteMember" parameterType="String">
		<![CDATA[
		DELETE	FROM member
		WHERE	email = #{email}
		]]>
	</delete>


</mapper>